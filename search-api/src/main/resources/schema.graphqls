
type Query {
  getTrack(id: String): Track
  getArtist(id: String): Artist
  getAlbum(id: String): Album
  getArtistsAlbums(id: String): [AlbumSimplified!]
  getSearchResults(query: String, type: String): SearchResult
  getMovie(title: String): Movie
}

type Rating {
  Source: String!
  Value: String!
}

type Movie {
  Title: String!
  Year: String!
  Rated: String
  Released: String
  Runtime: String
  Genre: String
  Director: String
  Writer: String
  Actors: String
  Plot: String
  Language: String
  Country: String
  Awards: String
  Poster: String
  Ratings: [Rating]
  Metascore: String
  imdbRating: String
  imdbVotes: String
  imdbID: String
  Type: String
  DVD: String
  BoxOffice: String
  Production: String
  Website: String
}

type ExternalUrls {
  key: String
  value: String
}

type Followers {
  href: String
  total: Int
}

type Image {
  url: String!
  height: Int!
  width: Int!
}

type Artist {
  followers: Followers
  genres: [String!]
  href: String!
  id: String!
  name: String!
  images: [Image!]
  popularity: Int
  type: String!
  uri: String!
}

type Album {
  albumType: String
  artists: [ArtistSimplified]
  genres: [String!]
  href: String
  id: String!
  images: [Image!]
  label: String
  name: String!
  popularity: Int
  releaseDate: String
  tracks: TrackSimplifiedPaging
  type: String
  uri: String
}

type TrackLink {
  href: String
  id: String!
  type: String
  uri: String
}

type TrackSimplified {
  artists: [ArtistSimplified!]!
  discNumber: Int
  durationMs: Int
  explicit: Boolean
  href: String
  id: String!
  isPlayable: Boolean
  linkedFrom: TrackLink
  name: String!
  previewUrl: String
  trackNumber: Int
  type: String
  uri: String
}

type TrackSimplifiedPaging {
  href: String
  items: [TrackSimplified!]
  limit: Int!
  next: String!
  offset: Int!
  previous: String!
  total: Int!
}

type AlbumSimplified {
  albumGroup: String
  albumType: String
  id: String!
  href: String!
  name: String!
  images: [Image!]
}

type Track {
  album: AlbumSimplified!
  artists: [ArtistSimplified!]!
  discNumber: Int
  durationMs: Int
  explicit: Boolean
  id: String!
  href: String!
  name: String!
  previewUrl: String
  uri: String!
  type: String
}

type ArtistSimplified {
  href: String
  id: String!
  name: String!
  type: String
  uri: String
}

type TrackPaging {
  href: String
  items: [Track!]
  limit: Int
  next: String
  offset: Int!
  previous: String!
  total: Int!
}

type ArtistPaging {
  href: String
  items: [Artist!]
  limit: Int
  next: String
  offset: Int
  previous: String
  total: Int
}

type ArtistSimplifiedPaging {
  href: String
  items: [ArtistSimplified!]
  limit: Int
  next: String
  offset: Int
  previous: String
  total: Int!
}

type AlbumSimplifiedPaging {
  href: String
  items: [AlbumSimplified!]
  limit: Int
  next: String
  offset: Int
  previous: String
  total: Int!
}

type SearchResult {
  albums: AlbumSimplifiedPaging!
  artists: ArtistPaging!
  tracks: TrackPaging!
}
